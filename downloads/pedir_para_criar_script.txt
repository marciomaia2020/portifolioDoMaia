crie um script conforme especificação abaixo: com o nome megasenaConf

# Acessar o diretório do projeto
H:\Meu Drive\ProjetosPython\Loterias\Conferidores\megasenaConf (vc deve acessar este diretório que JA ESTA CRIADO

# Crie diretórios (onde será criado a estrutura)
# Crie arquivos
# Crie o ambiente virtual
# Carregar o perfil do PowerShell
# Ativar o ambiente virtual diretamente
# Instalar o arquivo requirements.txt (DAR UMA PAUSA E AVISA O USUARIO PARA INSERIR AS INFORMAÇÕES NO ARQUIVO)




megasenaConf/
├── static/
│   ├── css/
│   │   └── style.css
│   └── js/
│       └── main.js
├── templates/
│   └── index.html
├── requirements.txt
├── config.py
└── app.py



# Comentário
python -m venv "$projectDir\venv"


# Carregando o perfil do PowerShell
if (Test-Path $PROFILE) {
    Write-Host "Carregando o perfil do PowerShell..." -ForegroundColor Green
    . $PROFILE
} else {
    Write-Host "O arquivo de perfil do PowerShell não foi encontrado." -ForegroundColor Yellow
}

# Ativando o ambiente virtual diretamente
$activateScript = Join-Path "$projectDir\venv\Scripts" "Activate.ps1"
if (Test-Path $activateScript) {
    Write-Host "Ativando o ambiente virtual..." -ForegroundColor Green
    . $activateScript
} else {
    Write-Host "O script de ativação do ambiente virtual não foi encontrado." -ForegroundColor Red
}

#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...
#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...
#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...
#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...#arquivo pronto...


# Diretório do projeto
$projectDir = "H:\Meu Drive\ProjetosPython\Loterias\Conferidores\megasenaConf"

# Verificando se o diretório existe
if (-Not (Test-Path $projectDir)) {
    Write-Host "O diretório do projeto não foi encontrado: $projectDir" -ForegroundColor Red
    exit
}

# Criando a estrutura de diretórios
Write-Host "Criando estrutura de diretorios..." -ForegroundColor Cyan
New-Item -ItemType Directory -Path "$projectDir\static\css" -Force | Out-Null
New-Item -ItemType Directory -Path "$projectDir\static\js" -Force | Out-Null
New-Item -ItemType Directory -Path "$projectDir\templates" -Force | Out-Null

# Criando os arquivos
Write-Host "Criando arquivos..." -ForegroundColor Cyan
New-Item -ItemType File -Path "$projectDir\static\css\style.css" -Force | Out-Null
New-Item -ItemType File -Path "$projectDir\static\js\main.js" -Force | Out-Null
New-Item -ItemType File -Path "$projectDir\templates\index.html" -Force | Out-Null
New-Item -ItemType File -Path "$projectDir\requirements.txt" -Force | Out-Null
New-Item -ItemType File -Path "$projectDir\config.py" -Force | Out-Null
New-Item -ItemType File -Path "$projectDir\app.py" -Force | Out-Null

Write-Host "Arquivos criados com sucesso." -ForegroundColor Green

# Criando o ambiente virtual
Write-Host "Criando o ambiente virtual..." -ForegroundColor Cyan
python -m venv "$projectDir\venv"

# Verificando se o ambiente virtual foi criado
if (-Not (Test-Path "$projectDir\venv")) {
    Write-Host "Falha ao criar o ambiente virtual. Verifique se o Python esta instalado e configurado corretamente." -ForegroundColor Red
    exit
}

Write-Host "Ambiente virtual criado com sucesso." -ForegroundColor Green

# Carregando o perfil do PowerShell
if (Test-Path $PROFILE) {
    Write-Host "Carregando o perfil do PowerShell..." -ForegroundColor Green
    . $PROFILE
} else {
    Write-Host "O arquivo de perfil do PowerShell nao foi encontrado." -ForegroundColor Yellow
}

# Ativando o ambiente virtual diretamente
$activateScript = Join-Path "$projectDir\venv\Scripts" "Activate.ps1"
if (Test-Path $activateScript) {
    Write-Host "Ativando o ambiente virtual..." -ForegroundColor Green
    . $activateScript
} else {
    Write-Host "O script de ativacao do ambiente virtual não foi encontrado." -ForegroundColor Red
    exit
}

# Informando o usuário para preencher o arquivo requirements.txt
Write-Host "O ambiente esta pronto para configurar as dependencias." -ForegroundColor Cyan
Write-Host "Edite o arquivo requirements.txt em: $projectDir\requirements.txt e insira as dependências necessárias." -ForegroundColor Yellow
Write-Host "Pressione qualquer tecla para continuar a instalacao quando terminar de editar o arquivo requirements.txt..." -ForegroundColor Cyan
Pause

# Instalando as dependências do requirements.txt
if (Test-Path "$projectDir\requirements.txt") {
    Write-Host "Instalando dependencias do requirements.txt..." -ForegroundColor Cyan
    pip install -r "$projectDir\requirements.txt"
    Write-Host "Dependencias instaladas com sucesso.Insira os conteudo nos arquivos gerados" -ForegroundColor Green
} else {
    Write-Host "O arquivo requirements.txt nao foi encontrado, ou esta vazio." -ForegroundColor Red
}
